@using Microsoft.AspNetCore.Components;
@model CatalogR.Models.Collection
@{
    ViewData["Title"] = "Details";
    var custom = new Dictionary<string, IEnumerable<string>>()
        {
            {"Custom String", Model.GetCustomString()},
            {"Custom Int", Model.GetCustomInt()},
            {"Custom Bool", Model.GetCustomBool()},
            {"Custom Date", Model.GetCustomDate()},
            {"Custom Text", Model.GetCustomText()}
        };
    var check = ViewData["OwnsCollection"] as bool?;
    var owns = check != null ? check.Value : false;
}

<div>
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex flex-column">
            <h4>@Model.Name</h4>
            @if (Model.User != null)
            {
                if (owns)
                {
                    <span>
                        <a asp-action="Index" asp-controller="UserCollections" class="link-primary link-underline link-underline-opacity-0 fw-bold">
                            @Localizer["Your collection"]
                        </a>
                    </span>
                }
                else
                {

                    <span>
                        @Localizer["by"]
                        <a asp-action="ByUser" asp-controller="Collections" asp-route-id="@Model.User.Id" class="link-primary link-underline link-underline-opacity-0 fw-bold">
                            @Model.User.UserName
                        </a>
                    </span>
                }
            }
        </div>
        <div class="d-flex gap-2 align-items-center">
            @if (owns)
            {
                <a asp-action="Edit" asp-controller="UserCollections" asp-route-id="@Model?.Id">
                    <i class="bi bi-pencil-square h3"></i>
                </a>
            }
            <a class="btn btn-primary" asp-action="Items" asp-controller="Collections" asp-route-id="@Model!.Id">
                @Localizer["Items"]
            </a>
        </div>
    </div>
    <hr />
    <div class="d-flex flex-column gap-4">

        @if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
        {
            <div class="d-flex justify-content-center bg-primary-subtle rounded-5 shadow-lg p-3">
                <img src="@Model.ImageUrl">
            </div>
        }

        <div class="bg-primary-subtle rounded-2 shadow-lg">
            <ul class="nav nav-tabs" role="tablist">
                @foreach (var item in custom.Select((value, i) => new { i, value }))
                {
                    <li class="nav-item" role="presentation">
                        <a class="nav-link @(item.i==0 ? "active": "")" id="tab-@item.i" data-bs-toggle="tab" href="#tabpanel-@item.i" role="tab" aria-controls="tabpanel-@item.i" aria-selected="true">
                            @Localizer[item.value.Key]
                        </a>
                    </li>
                }
            </ul>

            <div class="tab-content" id="tab-content">
                @foreach (var item in custom.Select((value, i) => new { i, value }))
                {
                    <div class="tab-pane @(item.i==0 ? "active":"" )" id="tabpanel-@item.i" role="tabpanel" aria-labelledby="tab-@item.i">
                        <partial name="_CustomTypeList" model="item.value.Value">
                    </div>
                }
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="bg-primary-subtle rounded-2 shadow-lg p-3 overflow-auto">
                @Html.Raw(Model.DescriptionMarkdown)
            </div>
        }
    </div>
</div>

