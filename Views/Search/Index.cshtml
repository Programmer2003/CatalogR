@model SearchModel
@inject LinkGenerator LinkGenerator
@inject CatalogR.Services.TimeManagerService timeService

<div>
    Result found by:
    <b class="text-primary h5">@Model.Query</b>
</div>

<div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Items:
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div class="list-group">
                    @if (Model.Items.Count() != 0)
                    {
                        @foreach (var Item in Model.Items)
                        {
                            <a href="@LinkGenerator.GetPathByAction("Details", "Items", new { Item.Id })" class="list-group-item list-group-item-action d-flex gap-3 py-3" aria-current="true">
                                <div class="d-flex gap-2 w-100 justify-content-between">
                                    <div>
                                        <h6 class="mb-0">@Item.Name</h6>
                                        <p class="mb-0 opacity-75">@GetItemText(Item)</p>
                                    </div>
                                    <small class="opacity-50 text-nowrap">@timeService.AsTimeAgo(Item.TimeStamp)</small>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <span>Empty</span>
                    }
                </div>

            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                Collections
            </button>
        </h2>
        <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div class="list-group">
                    @if (Model.Collections.Count() != 0)
                    {
                        @foreach (var Collection in Model.Collections)
                        {
                            <a href="@LinkGenerator.GetPathByAction("Items", "Collections", new { id = Collection.Id })" class="list-group-item list-group-item-action d-flex gap-3 py-3" aria-current="true">
                                <div class="d-flex gap-2 w-100 justify-content-between">
                                    <div>
                                        <h6 class="mb-0">@Collection.Name</h6>
                                        <p class="mb-0 opacity-75">@GetCollectionText(Collection)</p>
                                    </div>
                                    <small class="opacity-50 text-nowrap">@timeService.AsTimeAgo(Collection.TimeStamp)</small>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <span>Empty</span>
                    }
                </div>

            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                Comments
            </button>
        </h2>
        <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div class="list-group">
                    @if (Model.Comments.Count() != 0)
                    {
                        @foreach (var Comment in Model.Comments)
                        {
                            <a href="@LinkGenerator.GetPathByAction("Details", "Items", new { Id = Comment.ItemId })#comments" class="list-group-item list-group-item-action d-flex gap-3 py-3" aria-current="true">
                                <div class="d-flex gap-2 w-100 justify-content-between">
                                    <div>
                                        <h6 class="mb-0">@Comment.Item?.Name</h6>
                                        <p class="mb-0 opacity-75">@GetCommentText(Comment)</p>
                                    </div>
                                    <small class="opacity-50 text-nowrap">@timeService.AsTimeAgo(Comment.TimeStamp)</small>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <span>Empty</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@{
    string GetItemText(Item item)
    {
        var result = item.FullTextIndexPropetries.FirstOrDefault(p => p != null && p.ToLower().Contains(Model.Query.ToLower()));
        return string.IsNullOrWhiteSpace(result) ? item.Name : result;
    }

    string GetCollectionText(Collection collection)
    {
        var result = collection.FullTextIndexPropetries.FirstOrDefault(p => p != null && p.ToLower().Contains(Model.Query.ToLower()));
        return string.IsNullOrWhiteSpace(result) ? collection.Name : result;
    }

    string GetCommentText(Comment comment)
    {
        var result = comment.FullTextIndexPropetries.FirstOrDefault(p => p != null && p.ToLower().Contains(Model.Query.ToLower()));
        return string.IsNullOrWhiteSpace(result) ? comment.Text : result;
    }
}
