@using CatalogR.Models;
@model Item

@{
    ViewData["Title"] = "Details";
    var check = ViewData["OwnsItem"] as bool?;
    var owns = check != null ? check.Value : false;
    var UserId = UserManager.GetUserId(User);
    var Auth = SignInManager.IsSignedIn(User);
    var collection = Model.Collection;
}

<div>
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex flex-column">
            <h4>@Model.Name</h4>
            @if (collection != null)
            {
                if (owns)
                {
                    <span>
                        <a asp-action="Index" asp-controller="UserCollections" class="link-primary link-underline link-underline-opacity-0 fw-bold">
                            Your Collection
                        </a>
                    </span>
                }
                else
                {
                    <span>
                        @Localizer["by"] <a asp-action="ByUser" asp-controller="Collections" asp-route-id="@collection.User?.Id" class="link-primary link-underline link-underline-opacity-0 fw-bold">
                            @collection.User?.UserName
                        </a>
                    </span>
                }
            }
        </div>
        <div class="d-flex gap-2 align-self-end">
            @if (owns)
            {
                <a class="btn btn-primary" asp-action="Edit" asp-controller="CollectionItems" asp-route-collectionId="@Model.CollectionId" asp-route-id="@Model?.Id">
                    @Localizer["Edit"]
                </a>
            }
            @if (owns)
            {
                <a class="btn btn-primary" asp-action="Index" asp-controller="CollectionItems" asp-route-collectionId="@Model!.Id">
                    @Localizer["Collection"]
                </a>
            }
            else
            {
                <a class="btn btn-primary" asp-action="Items" asp-controller="Collections" asp-route-id="@Model!.Id">
                    @Localizer["Collection"]
                </a>
            }

        </div>
    </div>
    <hr />
    <div class="d-flex flex-column gap-4">
        <div class="row">
            <div class="col-md">
                @(await Html.RenderComponentAsync<CatalogR.Views.Components.Items.Likes>(RenderMode.ServerPrerendered, new { UserId, ItemId = Model.Id, Model.LikesCount, Auth, Liked = Model.Likes.Any(l => l.UserId == UserId) }))
            </div>
            <div class="col-md">
                <nav>
                    <h4>Tags</h4>
                    @foreach (var tag in Model.Tags)
                    {
                        <partial name="_TagLinkPartial" model="tag" />
                    }
                </nav>
            </div>
        </div>
        @if (collection != null)
        {
            if (collection.CustomString1_State || collection.CustomString2_State || collection.CustomString3_State)
            {
                <div class="row">
                    <partial name="Items/_CustomStringCardPartial" model="new CustomFieldValues<string?>(collection.CustomString1_State, collection.CustomString1_Name, Model.CustomString1)" />
                    <partial name="Items/_CustomStringCardPartial" model="new CustomFieldValues<string?>(collection.CustomString2_State, collection.CustomString2_Name, Model.CustomString2)" />
                    <partial name="Items/_CustomStringCardPartial" model="new CustomFieldValues<string?>(collection.CustomString3_State, collection.CustomString3_Name, Model.CustomString3)" />
                </div>
            }

            if (collection.CustomInt1_State || collection.CustomInt2_State || collection.CustomInt3_State ||
            collection.CustomDate1_State || collection.CustomDate2_State || collection.CustomDate3_State)
            {
                <div class="row">
                    <div class="col-md">
                        <ul class="list-group">
                            <partial name="Items/_CustomIntCardPartial" model="new CustomFieldValues<int?>(collection.CustomInt1_State, collection.CustomInt1_Name, Model.CustomInt1)" />
                            <partial name="Items/_CustomIntCardPartial" model="new CustomFieldValues<int?>(collection.CustomInt2_State, collection.CustomInt2_Name, Model.CustomInt2)" />
                            <partial name="Items/_CustomIntCardPartial" model="new CustomFieldValues<int?>(collection.CustomInt3_State, collection.CustomInt3_Name, Model.CustomInt3)" />
                        </ul>
                    </div>
                    <div class="col-md">
                        <ul class="list-group">
                            <partial name="Items/_CustomDateCardPartial" model="new CustomFieldValues<DateTime?>(collection.CustomDate1_State, collection.CustomDate1_Name, Model.CustomDate1)" />
                            <partial name="Items/_CustomDateCardPartial" model="new CustomFieldValues<DateTime?>(collection.CustomDate2_State, collection.CustomDate2_Name, Model.CustomDate2)" />
                            <partial name="Items/_CustomDateCardPartial" model="new CustomFieldValues<DateTime?>(collection.CustomDate3_State, collection.CustomDate3_Name, Model.CustomDate3)" />
                        </ul>
                    </div>
                </div>
            }
            if (collection.CustomText1_State || collection.CustomText2_State || collection.CustomText3_State)
            {
                <div class="col">
                    <partial name="Items/_CustomTextCardPartial" model="new CustomFieldValues<string?>(collection.CustomText1_State, collection.CustomText1_Name, Model.CustomText1)" />
                    <partial name="Items/_CustomTextCardPartial" model="new CustomFieldValues<string?>(collection.CustomText2_State, collection.CustomText2_Name, Model.CustomText2)" />
                    <partial name="Items/_CustomTextCardPartial" model="new CustomFieldValues<string?>(collection.CustomText3_State, collection.CustomText3_Name, Model.CustomText3)" />
                </div>
            }
        }
        @(await Html.RenderComponentAsync<CatalogR.Views.Components.Items.CommentsList>(RenderMode.ServerPrerendered, new { Comments = new LinkedList<Comment>(Model.Comments), UserId, ItemId = Model.Id, Auth }))
    </div>
</div>
